#!/usr/bin/with-contenv bash

APP_DIR=/app/serverpackcreator
OVERRIDES=${APP_DIR}/overrides.properties
rm -f ${OVERRIDES}
touch ${OVERRIDES}

echo "**** Creating overrides.properties ****"

if [[ -n ${SPC_SCHEDULE_DATABASE_CLEANUP} ]];then
  echo "Overriding de.griefed.serverpackcreator.spring.schedules.database.cleanup..."
  echo "de.griefed.serverpackcreator.spring.schedules.database.cleanup=${SPC_SCHEDULE_DATABASE_CLEANUP}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_SCHEDULE_FILES_CLEANUP} ]];then
  echo "Overriding de.griefed.serverpackcreator.spring.schedules.files.cleanup..."
  echo "de.griefed.serverpackcreator.spring.schedules.files.cleanup=${SPC_SCHEDULE_FILES_CLEANUP}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_SCHEDULE_VERSIONS_REFRESH} ]];then
  echo "Overriding de.griefed.serverpackcreator.spring.schedules.versions.refresh..."
  echo "de.griefed.serverpackcreator.spring.schedules.versions.refresh=${SPC_SCHEDULE_VERSIONS_REFRESH}" >> ${OVERRIDES}
fi

if [[ -z ${SPC_DATABASE_HOST} ]] || [[ -z ${SPC_DATABASE_PORT} ]] || [[ -z ${SPC_DATABASE_DB} ]] || [[ -z ${SPC_DATABASE_USERNAME} ]] || [[ -z ${SPC_DATABASE_PASSWORD} ]];then
  echo "spring.data.mongodb.uri=mongodb\:" >> ${OVERRIDES}
else
  echo "Overriding spring.data.mongodb.uri..."
  echo "spring.data.mongodb.uri=mongodb\://${SPC_DATABASE_USERNAME}\:${SPC_DATABASE_PASSWORD}@${SPC_DATABASE_HOST}\:${SPC_DATABASE_PORT}/${SPC_DATABASE_DB}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_MAX_UPLOAD_SIZE} ]];then
  echo "Overriding spring.servlet.multipart.max-file-size and spring.servlet.multipart.max-request-size..."
  echo "spring.servlet.multipart.max-file-size=${SPC_MAX_UPLOAD_SIZE}MB" >> ${OVERRIDES}
  echo "spring.servlet.multipart.max-request-size=${SPC_MAX_UPLOAD_SIZE}MB" >> ${OVERRIDES}
fi

if [[ -n ${SPC_CONFIGURATION_AIKAR} ]];then
  echo "Overriding de.griefed.serverpackcreator.configuration.aikar..."
  echo "de.griefed.serverpackcreator.configuration.aikar=${SPC_CONFIGURATION_AIKAR}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_CONFIGURATION_DIRECTORIES_MUSTINCLUDE} ]];then
  echo "Overriding de.griefed.serverpackcreator.configuration.directories.mustinclude..."
  echo "de.griefed.serverpackcreator.configuration.directories.mustinclude=${SPC_CONFIGURATION_DIRECTORIES_MUSTINCLUDE}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_CONFIGURATION_DIRECTORIES_SHOULDEXCLUDE} ]];then
  echo "Overriding de.griefed.serverpackcreator.configuration.directories.shouldexclude..."
  echo "de.griefed.serverpackcreator.configuration.directories.shouldexclude=${SPC_CONFIGURATION_DIRECTORIES_SHOULDEXCLUDE}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_CONFIGURATION_FALLBACK_UPDATEURL} ]];then
  echo "Overriding de.griefed.serverpackcreator.configuration.fallback.updateurl..."
  echo "de.griefed.serverpackcreator.configuration.fallback.updateurl=${SPC_CONFIGURATION_FALLBACK_UPDATEURL}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_SERVERPACK_AUTODISCOVERY_ENABLED} ]];then
  echo "Overriding de.griefed.serverpackcreator.serverpack.autodiscovery.enabled..."
  echo "de.griefed.serverpackcreator.serverpack.autodiscovery.enabled=${SPC_SERVERPACK_AUTODISCOVERY_ENABLED}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_SERVERPACK_AUTODISCOVERY_FILTER} ]];then
  echo "Overriding de.griefed.serverpackcreator.serverpack.autodiscovery.filter..."
  echo "de.griefed.serverpackcreator.serverpack.autodiscovery.filter=${SPC_SERVERPACK_AUTODISCOVERY_FILTER}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_SERVERPACK_ZIP_EXCLUDE} ]];then
  echo "Overriding de.griefed.serverpackcreator.serverpack.zip.exclude..."
  echo "de.griefed.serverpackcreator.serverpack.zip.exclude={$SPC_SERVERPACK_ZIP_EXCLUDE}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_SERVERPACK_ZIP_EXCLUDE_ENABLED} ]];then
  echo "Overriding de.griefed.serverpackcreator.serverpack.zip.exclude.enabled..."
  echo "de.griefed.serverpackcreator.serverpack.zip.exclude.enabled={$SPC_SERVERPACK_ZIP_EXCLUDE_ENABLED}" >> ${OVERRIDES}
fi

if [[ -n ${SPC_LOG_LEVEL} ]];then
  echo "Overriding de.griefed.serverpackcreator.loglevel..."
  echo "de.griefed.serverpackcreator.loglevel={SPC_LOG_LEVEL}" >> ${OVERRIDES}
fi

echo "server.tomcat.basedir=/app/serverpackcreator" >> ${OVERRIDES}
echo "de.griefed.serverpackcreator.home=/app/serverpackcreator" >> ${OVERRIDES}

echo "**** Copying default /defaults/serverpackcreator.properties ****"

if [ ! -f /app/serverpackcreator/serverpackcreator.properties ]; then
  echo "**** Setting up default serverpackcreator properties. ****"
  cp -f \
    /defaults/serverpackcreator.properties \
    ${APP_DIR}/serverpackcreator.properties
fi

echo "**** chowning ${OVERRIDES} & ${APP_DIR}/serverpackcreator.properties ****"

mkdir -p \
     ${APP_DIR}/temp

lsiown abc:abc \
    ${APP_DIR}/serverpackcreator.properties \
    ${APP_DIR}/temp                         \
    ${OVERRIDES}

echo "**** Checking permissions ****"

# check Library permissions
PUID=${PUID:-911}

if [ -d /app/serverpackcreator ] && [ ! "$(stat -c %u /app/serverpackcreator)" = "${PUID}" ]; then
    echo "Change in app ownership detected, please be patient while we chown existing files"
    echo "This could take some time"
    lsiown -R abc:abc \
        /app/serverpackcreator
else
    if [ -d /app/serverpackcreator/server-packs ] && [ ! "$(stat -c %u /app/serverpackcreator/server-packs)" = "${PUID}" ]; then
        echo "Change in server-packs ownership detected, please be patient while we chown existing files"
        echo "This could take some time"
        lsiown -R abc:abc \
            /app/serverpackcreator/server-packs
    fi

    if [ -d /app/serverpackcreator/modpacks ] && [ ! "$(stat -c %u /app/serverpackcreator/modpacks)" = "${PUID}" ]; then
        echo "Change in modpacks ownership detected, please be patient while we chown existing files"
        echo "This could take some time"
        lsiown -R abc:abc \
            /app/serverpackcreator/modpacks
    fi

    if [ -d /app/serverpackcreator/logs ] && [ ! "$(stat -c %u /app/serverpackcreator/logs)" = "${PUID}" ]; then
        echo "Change in logs ownership detected, please be patient while we chown existing files"
        echo "This could take some time"
        lsiown -R abc:abc \
            /app/serverpackcreator/logs
    fi
fi

echo "**** Init done ****"
