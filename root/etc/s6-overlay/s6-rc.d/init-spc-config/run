#!/usr/bin/with-contenv bash

APP_DIR=/app/serverpackcreator
OVERRIDES=$APP_DIR/overrides.properties
rm -f $OVERRIDES
touch $OVERRIDES

echo "**** Creating overrides.properties ****"

if [[ -z ${SPC_SCHEDULE_DATABASE_CLEANUP} ]];then
  echo "de.griefed.serverpackcreator.spring.schedules.database.cleanup=0 0 0 * * *" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.spring.schedules.database.cleanup=$SPC_SCHEDULE_DATABASE_CLEANUP" >> $OVERRIDES
fi

if [[ -z ${SPC_SCHEDULE_FILES_CLEANUP} ]];then
  echo "de.griefed.serverpackcreator.spring.schedules.files.cleanup=0 30 0 * * *" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.spring.schedules.files.cleanup=$SPC_SCHEDULE_FILES_CLEANUP" >> $OVERRIDES
fi

if [[ -z ${SPC_SCHEDULE_VERSIONS_REFRESH} ]];then
  echo "de.griefed.serverpackcreator.spring.schedules.versions.refresh=0 0 0 * * *" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.spring.schedules.versions.refresh=$SPC_SCHEDULE_VERSIONS_REFRESH" >> $OVERRIDES
fi

if [[ -z ${SPC_DATABASE_PASSWORD} ]];then
  echo "spring.datasource.password=" >> $OVERRIDES
else
  echo "spring.datasource.password=$SPC_DATABASE_PASSWORD" >> $OVERRIDES
fi

if [[ -z ${SPC_DATABASE_USERNAME} ]];then
  echo "spring.datasource.username=" >> $OVERRIDES
else
  echo "spring.datasource.username=$SPC_DATABASE_USERNAME" >> $OVERRIDES
fi

if [[ -z ${SPC_DATABASE_HOST} ]] || [[ -z ${SPC_DATABASE_PORT} ]] || [[ -z ${SPC_DATABASE_DB} ]];then
  echo "spring.datasource.url=jdbc\:postgresql\:" >> $OVERRIDES
else
  echo "spring.datasource.url=jdbc\:postgresql\://${SPC_DATABASE_HOST}\:${SPC_DATABASE_PORT}/${SPC_DATABASE_DB}" >> $OVERRIDES
fi

if [[ -z ${SPC_MAX_UPLOAD_SIZE} ]];then
  echo "spring.servlet.multipart.max-file-size=1000MB" >> $OVERRIDES
  echo "spring.servlet.multipart.max-request-size=1000MB" >> $OVERRIDES
else
  echo "spring.servlet.multipart.max-file-size=${SPC_MAX_UPLOAD_SIZE}MB" >> $OVERRIDES
  echo "spring.servlet.multipart.max-request-size=${SPC_MAX_UPLOAD_SIZE}MB" >> $OVERRIDES
fi

if [[ -z ${SPC_CONFIGURATION_AIKAR} ]];then
  echo "de.griefed.serverpackcreator.configuration.aikar=-Xms4G -Xmx4G -XX\:+UseG1GC -XX\:+ParallelRefProcEnabled -XX\:MaxGCPauseMillis\=200 -XX\:+UnlockExperimentalVMOptions -XX\:+DisableExplicitGC -XX\:+AlwaysPreTouch -XX\:G1NewSizePercent\=30 -XX\:G1MaxNewSizePercent\=40 -XX\:G1HeapRegionSize\=8M -XX\:G1ReservePercent\=20 -XX\:G1HeapWastePercent\=5 -XX\:G1MixedGCCountTarget\=4 -XX\:InitiatingHeapOccupancyPercent\=15 -XX\:G1MixedGCLiveThresholdPercent\=90 -XX\:G1RSetUpdatingPauseTimePercent\=5 -XX\:SurvivorRatio\=32 -XX\:+PerfDisableSharedMem -XX\:MaxTenuringThreshold\=1 -Dusing.aikars.flags\=https\://mcflags.emc.gs -Daikars.new.flags\=true" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.configuration.aikar=$SPC_CONFIGURATION_AIKAR" >> $OVERRIDES
fi

if [[ -z ${SPC_CONFIGURATION_DIRECTORIES_MUSTINCLUDE} ]];then
  echo "de.griefed.serverpackcreator.configuration.directories.mustinclude=addonpacks,blueprints,config,configs,customnpcs,defaultconfigs,global_data_packs,global_packs,kubejs,maps,mods,openloader,scripts,shrines-saves,structures,structurize,worldshape,Zoestria" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.configuration.directories.mustinclude=$SPC_CONFIGURATION_DIRECTORIES_MUSTINCLUDE" >> $OVERRIDES
fi

if [[ -z ${SPC_CONFIGURATION_DIRECTORIES_SHOULDEXCLUDE} ]];then
  echo "de.griefed.serverpackcreator.configuration.directories.shouldexclude=animation,asm,cache,changelogs,craftpresence,crash-reports,downloads,icons,libraries,local,logs,overrides,packmenu,profileImage,profileImage,resourcepacks,screenshots,server_pack,shaderpacks,simple-rpc,tv-cache" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.configuration.directories.shouldexclude=$SPC_CONFIGURATION_DIRECTORIES_SHOULDEXCLUDE" >> $OVERRIDES
fi

if [[ -z ${SPC_CONFIGURATION_FALLBACK_UPDATEURL} ]];then
  echo "de.griefed.serverpackcreator.configuration.fallback.updateurl=https\://raw.githubusercontent.com/Griefed/ServerPackCreator/main/serverpackcreator-api/src/jvmMain/resources/serverpackcreator.properties" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.configuration.fallback.updateurl=$SPC_CONFIGURATION_FALLBACK_UPDATEURL" >> $OVERRIDES
fi

if [[ -z ${SPC_SERVERPACK_AUTODISCOVERY_ENABLED} ]];then
  echo "de.griefed.serverpackcreator.serverpack.autodiscovery.enabled=true" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.serverpack.autodiscovery.enabled=$SPC_SERVERPACK_AUTODISCOVERY_ENABLED" >> $OVERRIDES
fi

if [[ -z ${SPC_SERVERPACK_AUTODISCOVERY_FILTER} ]];then
  echo "de.griefed.serverpackcreator.serverpack.autodiscovery.filter=START" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.serverpack.autodiscovery.filter=$SPC_SERVERPACK_AUTODISCOVERY_FILTER" >> $OVERRIDES
fi

if [[ -z ${SPC_SERVERPACK_ZIP_EXCLUDE} ]];then
  echo "de.griefed.serverpackcreator.serverpack.zip.exclude=minecraft_server.MINECRAFT_VERSION.jar,server.jar,libraries/net/minecraft/server/MINECRAFT_VERSION/server-MINECRAFT_VERSION.jar" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.serverpack.zip.exclude=$SPC_SERVERPACK_ZIP_EXCLUDE" >> $OVERRIDES
fi

if [[ -z ${SPC_SERVERPACK_ZIP_EXCLUDE_ENABLED} ]];then
  echo "de.griefed.serverpackcreator.serverpack.zip.exclude.enabled=true" >> $OVERRIDES
else
  echo "de.griefed.serverpackcreator.serverpack.zip.exclude.enabled=$SPC_SERVERPACK_ZIP_EXCLUDE_ENABLED" >> $OVERRIDES
fi

echo "server.tomcat.basedir=/app/serverpackcreator" >> $OVERRIDES
echo "de.griefed.serverpackcreator.home=/app/serverpackcreator" >> $OVERRIDES

echo "**** Copying default /defaults/serverpackcreator.properties ****"

if [ ! -f /app/serverpackcreator/serverpackcreator.properties ]; then
  echo "**** Setting up default serverpackcreator properties. ****"
  cp -f \
    /defaults/serverpackcreator.properties \
    $APP_DIR/serverpackcreator.properties
fi

echo "**** chowning $OVERRIDES & $APP_DIR/serverpackcreator.properties ****"

lsiown abc:abc \
    $APP_DIR/serverpackcreator.properties \
    $OVERRIDES

echo "**** Checking permissions ****"

# check Library permissions
PUID=${PUID:-911}

if [ -d /app/serverpackcreator ] && [ ! "$(stat -c %u /app/serverpackcreator)" = "$PUID" ]; then
    echo "Change in app ownership detected, please be patient while we chown existing files"
    echo "This could take some time"
    lsiown -R abc:abc \
        /app/serverpackcreator
else
    if [ -d /app/serverpackcreator/server-packs ] && [ ! "$(stat -c %u /app/serverpackcreator/server-packs)" = "$PUID" ]; then
        echo "Change in server-packs ownership detected, please be patient while we chown existing files"
        echo "This could take some time"
        lsiown -R abc:abc \
            /app/serverpackcreator/server-packs
    fi

    if [ -d /app/serverpackcreator/modpacks ] && [ ! "$(stat -c %u /app/serverpackcreator/modpacks)" = "$PUID" ]; then
        echo "Change in modpacks ownership detected, please be patient while we chown existing files"
        echo "This could take some time"
        lsiown -R abc:abc \
            /app/serverpackcreator/modpacks
    fi

    if [ -d /app/serverpackcreator/logs ] && [ ! "$(stat -c %u /app/serverpackcreator/logs)" = "$PUID" ]; then
        echo "Change in logs ownership detected, please be patient while we chown existing files"
        echo "This could take some time"
        lsiown -R abc:abc \
            /app/serverpackcreator/logs
    fi
fi

echo "**** Init done ****"
